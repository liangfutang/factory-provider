mybatis-plus:
  # config-location:
  mapper-locations: classpath*:/mapper/*Mapper.xml
  # 实体扫描，多个package用逗号或者分号分隔
  type-aliases-package: com.zjut.dubbo.provider.dataobject
  configuration:
    # 驼峰下划线转换
    map-underscore-to-camel-case: true
    cache-enabled: false
    call-setters-on-nulls: true
  global-config:
    # 刷新mapper 调试神器
    refresh: true
    banner: false
    #数据库大写下划线转换
    #capital-mode: true
    #序列接口实现类配置
    #key-generator: com.baomidou.springboot.xxx
    # 数据库相关配置
    db-config:
      db-type: mysql
      # 主键类型  AUTO:"数据库ID自增", INPUT:"用户输入ID",ID_WORKER:"全局唯一ID (数字类型唯一ID)", UUID:"全局唯一ID UUID";
      id-type: UUID
      # 字段策略 IGNORED:"忽略判断",NOT_NULL:"非 NULL 判断"),NOT_EMPTY:"非空判断"
      field-strategy: not_empty
      capital-mode: true
      #逻辑删除配置
      logic-delete-value: 1
      logic-not-delete-value: 0
spring:
  datasource:
    url: jdbc:mysql://localhost:3306/dubboprovider?useUnicode=true&characterEncoding=UTF-8&useSSL=false
    username: root
    password: 123456
    driver-class-name: com.mysql.cj.jdbc.Driver

# 暂时先使用该方式，后期还是要整合到starter二方包模块中
  dubbo:
    application:
      name: dubbo-provider #应用名
    registry:
      address: zookeeper://dev.cdh.ecarx.local:2181 #zookeeper地址
      port: 2181 #提供注册的端口
    protocol:
      name: dubbo
      port: 20890 #dubbo服务暴露的端口
    scan: com.zjut.dubbo.provider.openservice.service.impl #扫描的包名
#dubbo:
#  application:
#    name: springboot-dubbo-provider
#  registry:
#    address: zookeeper://dev.cdh.ecarx.local:2181
